

================================================================
== Vitis HLS Report for 'example'
================================================================
* Date:           Sun Nov  5 12:22:44 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        AXI_Master
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_33_1     |        ?|        ?|         1|          1|          1|     inf|       yes|
        |- VITIS_LOOP_40_2     |  1440080|  1440080|    360020|          -|          -|       4|        no|
        | + VITIS_LOOP_40_2.1  |   120001|   120001|         3|          1|          1|  120000|       yes|
        | + VITIS_LOOP_46_3    |   120000|   120000|         2|          1|          1|  120000|       yes|
        | + VITIS_LOOP_40_2.3  |   120001|   120001|         3|          1|          1|  120000|       yes|
        +----------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 3
  * Pipeline-3: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 4
  Pipeline-0 : II = 1, D = 3, States = { 10 11 12 }
  Pipeline-1 : II = 1, D = 2, States = { 14 15 }
  Pipeline-2 : II = 1, D = 3, States = { 17 18 19 }
  Pipeline-3 : II = 1, D = 1, States = { 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 25 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 13 11 
11 --> 12 
12 --> 10 
13 --> 14 
14 --> 16 15 
15 --> 14 
16 --> 17 
17 --> 20 18 
18 --> 19 
19 --> 17 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 2 
25 --> 25 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_4"   --->   Operation 26 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty_10, i32 0, i32 0, void @empty_8, i32 0, i32 120000, void @empty_12, void @empty, void @empty_8, i32 16, i32 16, i32 16, i32 16, void @empty_8, void @empty_8"   --->   Operation 27 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_0, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_1, void @empty_9, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_2"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %a, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_2"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %value_r"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %value_r, void @empty_0, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_1, void @empty_11, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %value_r, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %done"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %done, void @empty_0, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_1, void @empty_13, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %done, void @empty_3, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_8, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_0, i32 0, i32 0, void @empty_8, i32 0, i32 0, void @empty_1, void @empty_8, void @empty_8, i32 0, i32 0, i32 0, i32 0, void @empty_8, void @empty_8"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%done_read = read i1 @_ssdm_op_Read.s_axilite.i1, i1 %done"   --->   Operation 38 'read' 'done_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 39 [1/1] (1.00ns)   --->   "%value_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %value_r"   --->   Operation 39 'read' 'value_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 40 [1/1] (1.00ns)   --->   "%a_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %a"   --->   Operation 40 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%buff = alloca i64 1" [example.cpp:38]   --->   Operation 41 'alloca' 'buff' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln33 = br i1 %done_read, void %.split3.preheader, void %.split.preheader" [example.cpp:33]   --->   Operation 42 'br' 'br_ln33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.48ns)   --->   "%br_ln40 = br void %.split3" [example.cpp:40]   --->   Operation 43 'br' 'br_ln40' <Predicate = (!done_read)> <Delay = 0.48>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.split"   --->   Operation 44 'br' 'br_ln0' <Predicate = (done_read)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.47>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%seg = phi i3 %add_ln40, void %memcpy-split, i3 0, void %.split3.preheader" [example.cpp:40]   --->   Operation 45 'phi' 'seg' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%phi_mul = phi i21 %add_ln40_1, void %memcpy-split, i21 0, void %.split3.preheader" [example.cpp:40]   --->   Operation 46 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.74ns)   --->   "%add_ln40 = add i3 %seg, i3 1" [example.cpp:40]   --->   Operation 47 'add' 'add_ln40' <Predicate = true> <Delay = 0.74> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.07ns)   --->   "%add_ln40_1 = add i21 %phi_mul, i21 480000" [example.cpp:40]   --->   Operation 48 'add' 'add_ln40_1' <Predicate = true> <Delay = 1.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.69ns)   --->   "%icmp_ln40 = icmp_eq  i3 %seg, i3 4" [example.cpp:40]   --->   Operation 49 'icmp' 'icmp_ln40' <Predicate = true> <Delay = 0.69> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 4, i64 4, i64 4"   --->   Operation 50 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln40 = br i1 %icmp_ln40, void %.split7, void" [example.cpp:40]   --->   Operation 51 'br' 'br_ln40' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i21 %phi_mul" [example.cpp:44]   --->   Operation 52 'zext' 'zext_ln44' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.47ns)   --->   "%add_ln44 = add i64 %zext_ln44, i64 %a_read" [example.cpp:44]   --->   Operation 53 'add' 'add_ln44' <Predicate = (!icmp_ln40)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln44, i32 2, i32 63" [example.cpp:44]   --->   Operation 54 'partselect' 'trunc_ln' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln44 = sext i62 %trunc_ln" [example.cpp:44]   --->   Operation 55 'sext' 'sext_ln44' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln44" [example.cpp:44]   --->   Operation 56 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln40)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%ret_ln56 = ret" [example.cpp:56]   --->   Operation 57 'ret' 'ret_ln56' <Predicate = (icmp_ln40)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 58 [7/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 58 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 59 [6/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 59 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 60 [5/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 60 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 61 [4/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 61 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 62 [3/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 62 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 63 [2/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 63 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 64 [1/1] (0.00ns)   --->   "%specloopname_ln37 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [example.cpp:37]   --->   Operation 64 'specloopname' 'specloopname_ln37' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 65 [1/7] (7.30ns)   --->   "%empty_19 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:44]   --->   Operation 65 'readreq' 'empty_19' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 66 [1/1] (0.48ns)   --->   "%br_ln44 = br void %load-store-loop5" [example.cpp:44]   --->   Operation 66 'br' 'br_ln44' <Predicate = true> <Delay = 0.48>

State 10 <SV = 9> <Delay = 1.02>
ST_10 : Operation 67 [1/1] (0.00ns)   --->   "%loop_index6 = phi i17 0, void %.split7, i17 %empty_20, void %load-store-loop5.split"   --->   Operation 67 'phi' 'loop_index6' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 68 [1/1] (1.02ns)   --->   "%empty_20 = add i17 %loop_index6, i17 1"   --->   Operation 68 'add' 'empty_20' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 69 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 69 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 70 [1/1] (0.88ns)   --->   "%exitcond2 = icmp_eq  i17 %loop_index6, i17 120000"   --->   Operation 70 'icmp' 'exitcond2' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 71 [1/1] (0.00ns)   --->   "%empty_21 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 120000, i64 120000, i64 120000"   --->   Operation 71 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond2, void %load-store-loop5.split, void %memcpy-split4.preheader"   --->   Operation 72 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 73 [1/1] (7.30ns)   --->   "%gmem_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr" [example.cpp:44]   --->   Operation 73 'read' 'gmem_addr_read' <Predicate = (!exitcond2)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 1.35>
ST_12 : Operation 74 [1/1] (0.00ns)   --->   "%loop_index6_cast = zext i17 %loop_index6"   --->   Operation 74 'zext' 'loop_index6_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_12 : Operation 75 [1/1] (0.00ns)   --->   "%buff_addr = getelementptr i32 %buff, i64 0, i64 %loop_index6_cast"   --->   Operation 75 'getelementptr' 'buff_addr' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_12 : Operation 76 [1/1] (1.35ns)   --->   "%store_ln44 = store i32 %gmem_addr_read, i17 %buff_addr" [example.cpp:44]   --->   Operation 76 'store' 'store_ln44' <Predicate = (!exitcond2)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>
ST_12 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop5"   --->   Operation 77 'br' 'br_ln0' <Predicate = (!exitcond2)> <Delay = 0.00>

State 13 <SV = 10> <Delay = 0.48>
ST_13 : Operation 78 [1/1] (0.48ns)   --->   "%br_ln46 = br void %memcpy-split4" [example.cpp:46]   --->   Operation 78 'br' 'br_ln46' <Predicate = true> <Delay = 0.48>

State 14 <SV = 11> <Delay = 1.35>
ST_14 : Operation 79 [1/1] (0.00ns)   --->   "%i = phi i17 %add_ln46, void %.split4, i17 0, void %memcpy-split4.preheader" [example.cpp:46]   --->   Operation 79 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 80 [1/1] (1.02ns)   --->   "%add_ln46 = add i17 %i, i17 1" [example.cpp:46]   --->   Operation 80 'add' 'add_ln46' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 81 [1/1] (0.88ns)   --->   "%icmp_ln46 = icmp_eq  i17 %i, i17 120000" [example.cpp:46]   --->   Operation 81 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 82 [1/1] (0.00ns)   --->   "%empty_22 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 120000, i64 120000, i64 120000"   --->   Operation 82 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln46 = br i1 %icmp_ln46, void %.split4, void" [example.cpp:46]   --->   Operation 83 'br' 'br_ln46' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i17 %i" [example.cpp:46]   --->   Operation 84 'zext' 'zext_ln46' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_14 : Operation 85 [1/1] (0.00ns)   --->   "%buff_addr_1 = getelementptr i32 %buff, i64 0, i64 %zext_ln46" [example.cpp:49]   --->   Operation 85 'getelementptr' 'buff_addr_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_14 : Operation 86 [2/2] (1.35ns)   --->   "%buff_load = load i17 %buff_addr_1" [example.cpp:49]   --->   Operation 86 'load' 'buff_load' <Predicate = (!icmp_ln46)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>

State 15 <SV = 12> <Delay = 3.90>
ST_15 : Operation 87 [1/1] (0.00ns)   --->   "%specpipeline_ln37 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_8" [example.cpp:37]   --->   Operation 87 'specpipeline' 'specpipeline_ln37' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_15 : Operation 88 [1/1] (0.00ns)   --->   "%specloopname_ln37 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6" [example.cpp:37]   --->   Operation 88 'specloopname' 'specloopname_ln37' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_15 : Operation 89 [1/2] (1.35ns)   --->   "%buff_load = load i17 %buff_addr_1" [example.cpp:49]   --->   Operation 89 'load' 'buff_load' <Predicate = (!icmp_ln46)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>
ST_15 : Operation 90 [1/1] (1.20ns)   --->   "%add_ln49 = add i32 %buff_load, i32 %value_read" [example.cpp:49]   --->   Operation 90 'add' 'add_ln49' <Predicate = (!icmp_ln46)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 91 [1/1] (1.35ns)   --->   "%store_ln49 = store i32 %add_ln49, i17 %buff_addr_1" [example.cpp:49]   --->   Operation 91 'store' 'store_ln49' <Predicate = (!icmp_ln46)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>
ST_15 : Operation 92 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memcpy-split4"   --->   Operation 92 'br' 'br_ln0' <Predicate = (!icmp_ln46)> <Delay = 0.00>

State 16 <SV = 12> <Delay = 7.30>
ST_16 : Operation 93 [1/1] (7.30ns)   --->   "%empty_23 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr, i32 120000" [example.cpp:52]   --->   Operation 93 'writereq' 'empty_23' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 94 [1/1] (0.48ns)   --->   "%br_ln52 = br void %load-store-loop" [example.cpp:52]   --->   Operation 94 'br' 'br_ln52' <Predicate = true> <Delay = 0.48>

State 17 <SV = 13> <Delay = 1.35>
ST_17 : Operation 95 [1/1] (0.00ns)   --->   "%loop_index = phi i17 0, void, i17 %empty_24, void %load-store-loop.split"   --->   Operation 95 'phi' 'loop_index' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 96 [1/1] (1.02ns)   --->   "%empty_24 = add i17 %loop_index, i17 1"   --->   Operation 96 'add' 'empty_24' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 97 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 97 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 98 [1/1] (0.88ns)   --->   "%exitcond86 = icmp_eq  i17 %loop_index, i17 120000"   --->   Operation 98 'icmp' 'exitcond86' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 99 [1/1] (0.00ns)   --->   "%empty_25 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 120000, i64 120000, i64 120000"   --->   Operation 99 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond86, void %load-store-loop.split, void %memcpy-split"   --->   Operation 100 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 101 [1/1] (0.00ns)   --->   "%loop_index_cast = zext i17 %loop_index"   --->   Operation 101 'zext' 'loop_index_cast' <Predicate = (!exitcond86)> <Delay = 0.00>
ST_17 : Operation 102 [1/1] (0.00ns)   --->   "%buff_addr_2 = getelementptr i32 %buff, i64 0, i64 %loop_index_cast"   --->   Operation 102 'getelementptr' 'buff_addr_2' <Predicate = (!exitcond86)> <Delay = 0.00>
ST_17 : Operation 103 [2/2] (1.35ns)   --->   "%buff_load_1 = load i17 %buff_addr_2"   --->   Operation 103 'load' 'buff_load_1' <Predicate = (!exitcond86)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>

State 18 <SV = 14> <Delay = 1.35>
ST_18 : Operation 104 [1/2] (1.35ns)   --->   "%buff_load_1 = load i17 %buff_addr_2"   --->   Operation 104 'load' 'buff_load_1' <Predicate = (!exitcond86)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 120000> <RAM>

State 19 <SV = 15> <Delay = 7.30>
ST_19 : Operation 105 [1/1] (7.30ns)   --->   "%write_ln44 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr, i32 %buff_load_1, i4 15" [example.cpp:44]   --->   Operation 105 'write' 'write_ln44' <Predicate = (!exitcond86)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 106 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 106 'br' 'br_ln0' <Predicate = (!exitcond86)> <Delay = 0.00>

State 20 <SV = 14> <Delay = 7.30>
ST_20 : Operation 107 [5/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [example.cpp:40]   --->   Operation 107 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 15> <Delay = 7.30>
ST_21 : Operation 108 [4/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [example.cpp:40]   --->   Operation 108 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 16> <Delay = 7.30>
ST_22 : Operation 109 [3/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [example.cpp:40]   --->   Operation 109 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 17> <Delay = 7.30>
ST_23 : Operation 110 [2/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [example.cpp:40]   --->   Operation 110 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 18> <Delay = 7.30>
ST_24 : Operation 111 [1/5] (7.30ns)   --->   "%empty_26 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [example.cpp:40]   --->   Operation 111 'writeresp' 'empty_26' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 112 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.split3"   --->   Operation 112 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 25 <SV = 1> <Delay = 0.00>
ST_25 : Operation 113 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 113 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 114 [1/1] (0.00ns)   --->   "%specloopname_ln33 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [example.cpp:33]   --->   Operation 114 'specloopname' 'specloopname_ln33' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 115 [1/1] (0.00ns)   --->   "%br_ln33 = br void %.split" [example.cpp:33]   --->   Operation 115 'br' 'br_ln33' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'done' [17]  (1 ns)

 <State 2>: 1.47ns
The critical path consists of the following:
	'phi' operation ('phi_mul', example.cpp:40) with incoming values : ('add_ln40_1', example.cpp:40) [26]  (0 ns)
	'add' operation ('add_ln44', example.cpp:44) [35]  (1.47 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:44) [39]  (7.3 ns)

 <State 10>: 1.03ns
The critical path consists of the following:
	'phi' operation ('loop_index6') with incoming values : ('empty_20') [42]  (0 ns)
	'add' operation ('empty_20') [43]  (1.03 ns)

 <State 11>: 7.3ns
The critical path consists of the following:
	bus read on port 'gmem' (example.cpp:44) [50]  (7.3 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('buff_addr') [51]  (0 ns)
	'store' operation ('store_ln44', example.cpp:44) of variable 'gmem_addr_read', example.cpp:44 on array 'buff', example.cpp:38 [52]  (1.35 ns)

 <State 13>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', example.cpp:46) with incoming values : ('add_ln46', example.cpp:46) [57]  (0.489 ns)

 <State 14>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i', example.cpp:46) with incoming values : ('add_ln46', example.cpp:46) [57]  (0 ns)
	'getelementptr' operation ('buff_addr_1', example.cpp:49) [66]  (0 ns)
	'load' operation ('buff_load', example.cpp:49) on array 'buff', example.cpp:38 [67]  (1.35 ns)

 <State 15>: 3.91ns
The critical path consists of the following:
	'load' operation ('buff_load', example.cpp:49) on array 'buff', example.cpp:38 [67]  (1.35 ns)
	'add' operation ('add_ln49', example.cpp:49) [68]  (1.2 ns)
	'store' operation ('store_ln49', example.cpp:49) of variable 'add_ln49', example.cpp:49 on array 'buff', example.cpp:38 [69]  (1.35 ns)

 <State 16>: 7.3ns
The critical path consists of the following:
	bus request on port 'gmem' (example.cpp:52) [72]  (7.3 ns)

 <State 17>: 1.35ns
The critical path consists of the following:
	'phi' operation ('loop_index') with incoming values : ('empty_24') [75]  (0 ns)
	'getelementptr' operation ('buff_addr_2') [83]  (0 ns)
	'load' operation ('buff_load_1') on array 'buff', example.cpp:38 [84]  (1.35 ns)

 <State 18>: 1.35ns
The critical path consists of the following:
	'load' operation ('buff_load_1') on array 'buff', example.cpp:38 [84]  (1.35 ns)

 <State 19>: 7.3ns
The critical path consists of the following:
	bus write on port 'gmem' (example.cpp:44) [85]  (7.3 ns)

 <State 20>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (example.cpp:40) [88]  (7.3 ns)

 <State 21>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (example.cpp:40) [88]  (7.3 ns)

 <State 22>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (example.cpp:40) [88]  (7.3 ns)

 <State 23>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (example.cpp:40) [88]  (7.3 ns)

 <State 24>: 7.3ns
The critical path consists of the following:
	bus response on port 'gmem' (example.cpp:40) [88]  (7.3 ns)

 <State 25>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
