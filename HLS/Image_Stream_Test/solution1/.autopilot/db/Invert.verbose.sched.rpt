

================================================================
== Vitis HLS Report for 'Invert'
================================================================
* Date:           Sat Nov  4 18:26:55 2023

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        Image_Stream_Test
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.098 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |             Loop Name             |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_30_1                  |        ?|        ?|         4|          4|          1|     ?|       yes|
        |- VITIS_LOOP_61_3_VITIS_LOOP_62_4  |    10022|    10022|        25|          2|          1|  5000|       yes|
        +-----------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 4
  * Pipeline-1: initiation interval (II) = 2, depth = 25


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 2
  Pipeline-0 : II = 4, D = 4, States = { 2 3 4 5 }
  Pipeline-1 : II = 2, D = 25, States = { 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 2 
6 --> 7 
7 --> 32 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 7 
32 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.83>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_4"   --->   Operation 33 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %Data_In_V_data_V, i4 %Data_In_V_keep_V, i4 %Data_In_V_strb_V, i2 %Data_In_V_user_V, i1 %Data_In_V_last_V, i5 %Data_In_V_id_V, i6 %Data_In_V_dest_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %Data_In_V_data_V"   --->   Operation 35 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %Data_In_V_keep_V"   --->   Operation 36 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %Data_In_V_strb_V"   --->   Operation 37 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %Data_In_V_user_V"   --->   Operation 38 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %Data_In_V_last_V"   --->   Operation 39 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i5 %Data_In_V_id_V"   --->   Operation 40 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %Data_In_V_dest_V"   --->   Operation 41 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %Data_Out_V_data_V, i4 %Data_Out_V_keep_V, i4 %Data_Out_V_strb_V, i2 %Data_Out_V_user_V, i1 %Data_Out_V_last_V, i5 %Data_Out_V_id_V, i6 %Data_Out_V_dest_V, void @empty, i32 1, i32 1, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 42 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %Data_Out_V_data_V"   --->   Operation 43 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %Data_Out_V_keep_V"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i4 %Data_Out_V_strb_V"   --->   Operation 45 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i2 %Data_Out_V_user_V"   --->   Operation 46 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %Data_Out_V_last_V"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i5 %Data_Out_V_id_V"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 %Data_Out_V_dest_V"   --->   Operation 49 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_3, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%R = alloca i64 1"   --->   Operation 51 'alloca' 'R' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%G = alloca i64 1"   --->   Operation 52 'alloca' 'G' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%B = alloca i64 1"   --->   Operation 53 'alloca' 'B' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%Mask = alloca i64 1"   --->   Operation 54 'alloca' 'Mask' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%indx = alloca i64 1"   --->   Operation 55 'alloca' 'indx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%Image = alloca i64 1" [Image_Test.cpp:28]   --->   Operation 56 'alloca' 'Image' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_1 : Operation 57 [1/1] (0.48ns)   --->   "%store_ln22 = store i32 0, i32 %R" [Image_Test.cpp:22]   --->   Operation 57 'store' 'store_ln22' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 58 [1/1] (0.48ns)   --->   "%store_ln23 = store i32 0, i32 %G" [Image_Test.cpp:23]   --->   Operation 58 'store' 'store_ln23' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 59 [1/1] (0.48ns)   --->   "%store_ln24 = store i32 0, i32 %B" [Image_Test.cpp:24]   --->   Operation 59 'store' 'store_ln24' <Predicate = true> <Delay = 0.48>
ST_1 : Operation 60 [1/1] (0.66ns)   --->   "%store_ln25 = store i32 255, i32 %Mask" [Image_Test.cpp:25]   --->   Operation 60 'store' 'store_ln25' <Predicate = true> <Delay = 0.66>
ST_1 : Operation 61 [1/1] (0.83ns)   --->   "%store_ln26 = store i32 0, i32 %indx" [Image_Test.cpp:26]   --->   Operation 61 'store' 'store_ln26' <Predicate = true> <Delay = 0.83>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln30 = br void %.split9.0" [Image_Test.cpp:30]   --->   Operation 62 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 2.04>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%empty = read i54 @_ssdm_op_Read.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %Data_In_V_data_V, i4 %Data_In_V_keep_V, i4 %Data_In_V_strb_V, i2 %Data_In_V_user_V, i1 %Data_In_V_last_V, i5 %Data_In_V_id_V, i6 %Data_In_V_dest_V"   --->   Operation 63 'read' 'empty' <Predicate = true> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue i54 %empty"   --->   Operation 64 'extractvalue' 'tmp_data_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%ref_tmp_keep = extractvalue i54 %empty"   --->   Operation 65 'extractvalue' 'ref_tmp_keep' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%ref_tmp_strb = extractvalue i54 %empty"   --->   Operation 66 'extractvalue' 'ref_tmp_strb' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%ref_tmp_user = extractvalue i54 %empty"   --->   Operation 67 'extractvalue' 'ref_tmp_user' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue i54 %empty"   --->   Operation 68 'extractvalue' 'tmp_last_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%ref_tmp_id = extractvalue i54 %empty"   --->   Operation 69 'extractvalue' 'ref_tmp_id' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%ref_tmp_dest = extractvalue i54 %empty"   --->   Operation 70 'extractvalue' 'ref_tmp_dest' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.66ns)   --->   "%store_ln33 = store i32 255, i32 %Mask" [Image_Test.cpp:33]   --->   Operation 71 'store' 'store_ln33' <Predicate = true> <Delay = 0.66>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%Mask_load = load i32 %Mask" [Image_Test.cpp:35]   --->   Operation 72 'load' 'Mask_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.40ns)   --->   "%and_ln35 = and i32 %Mask_load, i32 %tmp_data_V" [Image_Test.cpp:35]   --->   Operation 73 'and' 'and_ln35' <Predicate = true> <Delay = 0.40> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%indx_load = load i32 %indx" [Image_Test.cpp:35]   --->   Operation 74 'load' 'indx_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i32 %indx_load" [Image_Test.cpp:35]   --->   Operation 75 'zext' 'zext_ln35' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%Image_addr = getelementptr i32 %Image, i64 0, i64 %zext_ln35" [Image_Test.cpp:35]   --->   Operation 76 'getelementptr' 'Image_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (1.35ns)   --->   "%store_ln35 = store i32 %and_ln35, i13 %Image_addr" [Image_Test.cpp:35]   --->   Operation 77 'store' 'store_ln35' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%Mask_load_1 = load i32 %Mask" [Image_Test.cpp:36]   --->   Operation 78 'load' 'Mask_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%shl_ln36 = shl i32 %Mask_load_1, i32 8" [Image_Test.cpp:36]   --->   Operation 79 'shl' 'shl_ln36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (0.66ns)   --->   "%store_ln36 = store i32 %shl_ln36, i32 %Mask" [Image_Test.cpp:36]   --->   Operation 80 'store' 'store_ln36' <Predicate = true> <Delay = 0.66>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%indx_load_1 = load i32 %indx" [Image_Test.cpp:37]   --->   Operation 81 'load' 'indx_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.20ns)   --->   "%add_ln37 = add i32 %indx_load_1, i32 1" [Image_Test.cpp:37]   --->   Operation 82 'add' 'add_ln37' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.83ns)   --->   "%store_ln37 = store i32 %add_ln37, i32 %indx" [Image_Test.cpp:37]   --->   Operation 83 'store' 'store_ln37' <Predicate = true> <Delay = 0.83>

State 3 <SV = 2> <Delay = 2.04>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%Mask_load_4 = load i32 %Mask" [Image_Test.cpp:35]   --->   Operation 84 'load' 'Mask_load_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.40ns)   --->   "%and_ln35_1 = and i32 %Mask_load_4, i32 %tmp_data_V" [Image_Test.cpp:35]   --->   Operation 85 'and' 'and_ln35_1' <Predicate = true> <Delay = 0.40> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i24 @_ssdm_op_PartSelect.i24.i32.i32.i32, i32 %and_ln35_1, i32 8, i32 31" [Image_Test.cpp:35]   --->   Operation 86 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%sext_ln35 = sext i24 %trunc_ln1" [Image_Test.cpp:35]   --->   Operation 87 'sext' 'sext_ln35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%indx_load_8 = load i32 %indx" [Image_Test.cpp:35]   --->   Operation 88 'load' 'indx_load_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln35_1 = zext i32 %indx_load_8" [Image_Test.cpp:35]   --->   Operation 89 'zext' 'zext_ln35_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%Image_addr_4 = getelementptr i32 %Image, i64 0, i64 %zext_ln35_1" [Image_Test.cpp:35]   --->   Operation 90 'getelementptr' 'Image_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.35ns)   --->   "%store_ln35 = store i32 %sext_ln35, i13 %Image_addr_4" [Image_Test.cpp:35]   --->   Operation 91 'store' 'store_ln35' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%Mask_load_5 = load i32 %Mask" [Image_Test.cpp:36]   --->   Operation 92 'load' 'Mask_load_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%shl_ln36_1 = shl i32 %Mask_load_5, i32 8" [Image_Test.cpp:36]   --->   Operation 93 'shl' 'shl_ln36_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.66ns)   --->   "%store_ln36 = store i32 %shl_ln36_1, i32 %Mask" [Image_Test.cpp:36]   --->   Operation 94 'store' 'store_ln36' <Predicate = true> <Delay = 0.66>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%indx_load_9 = load i32 %indx" [Image_Test.cpp:37]   --->   Operation 95 'load' 'indx_load_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.20ns)   --->   "%add_ln37_1 = add i32 %indx_load_9, i32 1" [Image_Test.cpp:37]   --->   Operation 96 'add' 'add_ln37_1' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.83ns)   --->   "%store_ln37 = store i32 %add_ln37_1, i32 %indx" [Image_Test.cpp:37]   --->   Operation 97 'store' 'store_ln37' <Predicate = true> <Delay = 0.83>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%Mask_load_2 = load i32 %Mask" [Image_Test.cpp:35]   --->   Operation 98 'load' 'Mask_load_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.40ns)   --->   "%and_ln35_2 = and i32 %Mask_load_2, i32 %tmp_data_V" [Image_Test.cpp:35]   --->   Operation 99 'and' 'and_ln35_2' <Predicate = true> <Delay = 0.40> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%trunc_ln35_1 = partselect i16 @_ssdm_op_PartSelect.i16.i32.i32.i32, i32 %and_ln35_2, i32 16, i32 31" [Image_Test.cpp:35]   --->   Operation 100 'partselect' 'trunc_ln35_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%Mask_load_6 = load i32 %Mask" [Image_Test.cpp:36]   --->   Operation 101 'load' 'Mask_load_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%shl_ln36_2 = shl i32 %Mask_load_6, i32 8" [Image_Test.cpp:36]   --->   Operation 102 'shl' 'shl_ln36_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.66ns)   --->   "%store_ln36 = store i32 %shl_ln36_2, i32 %Mask" [Image_Test.cpp:36]   --->   Operation 103 'store' 'store_ln36' <Predicate = true> <Delay = 0.66>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%Mask_load_3 = load i32 %Mask" [Image_Test.cpp:35]   --->   Operation 104 'load' 'Mask_load_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.40ns)   --->   "%and_ln35_3 = and i32 %Mask_load_3, i32 %tmp_data_V" [Image_Test.cpp:35]   --->   Operation 105 'and' 'and_ln35_3' <Predicate = true> <Delay = 0.40> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%trunc_ln35_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %and_ln35_3, i32 24, i32 31" [Image_Test.cpp:35]   --->   Operation 106 'partselect' 'trunc_ln35_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%Mask_load_7 = load i32 %Mask" [Image_Test.cpp:36]   --->   Operation 107 'load' 'Mask_load_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%shl_ln36_3 = shl i32 %Mask_load_7, i32 8" [Image_Test.cpp:36]   --->   Operation 108 'shl' 'shl_ln36_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 109 [1/1] (0.66ns)   --->   "%store_ln36 = store i32 %shl_ln36_3, i32 %Mask" [Image_Test.cpp:36]   --->   Operation 109 'store' 'store_ln36' <Predicate = true> <Delay = 0.66>

State 4 <SV = 3> <Delay = 2.04>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln35_1 = sext i16 %trunc_ln35_1" [Image_Test.cpp:35]   --->   Operation 110 'sext' 'sext_ln35_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%indx_load_10 = load i32 %indx" [Image_Test.cpp:35]   --->   Operation 111 'load' 'indx_load_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln35_2 = zext i32 %indx_load_10" [Image_Test.cpp:35]   --->   Operation 112 'zext' 'zext_ln35_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%Image_addr_5 = getelementptr i32 %Image, i64 0, i64 %zext_ln35_2" [Image_Test.cpp:35]   --->   Operation 113 'getelementptr' 'Image_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (1.35ns)   --->   "%store_ln35 = store i32 %sext_ln35_1, i13 %Image_addr_5" [Image_Test.cpp:35]   --->   Operation 114 'store' 'store_ln35' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%indx_load_11 = load i32 %indx" [Image_Test.cpp:37]   --->   Operation 115 'load' 'indx_load_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (1.20ns)   --->   "%add_ln37_2 = add i32 %indx_load_11, i32 1" [Image_Test.cpp:37]   --->   Operation 116 'add' 'add_ln37_2' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.83ns)   --->   "%store_ln37 = store i32 %add_ln37_2, i32 %indx" [Image_Test.cpp:37]   --->   Operation 117 'store' 'store_ln37' <Predicate = true> <Delay = 0.83>

State 5 <SV = 4> <Delay = 2.04>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 118 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @empty_6"   --->   Operation 119 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%sext_ln35_2 = sext i8 %trunc_ln35_2" [Image_Test.cpp:35]   --->   Operation 120 'sext' 'sext_ln35_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%indx_load_12 = load i32 %indx" [Image_Test.cpp:35]   --->   Operation 121 'load' 'indx_load_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln35_3 = zext i32 %indx_load_12" [Image_Test.cpp:35]   --->   Operation 122 'zext' 'zext_ln35_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%Image_addr_6 = getelementptr i32 %Image, i64 0, i64 %zext_ln35_3" [Image_Test.cpp:35]   --->   Operation 123 'getelementptr' 'Image_addr_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (1.35ns)   --->   "%store_ln35 = store i32 %sext_ln35_2, i13 %Image_addr_6" [Image_Test.cpp:35]   --->   Operation 124 'store' 'store_ln35' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%indx_load_13 = load i32 %indx" [Image_Test.cpp:37]   --->   Operation 125 'load' 'indx_load_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (1.20ns)   --->   "%add_ln37_3 = add i32 %indx_load_13, i32 1" [Image_Test.cpp:37]   --->   Operation 126 'add' 'add_ln37_3' <Predicate = true> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 127 [1/1] (0.83ns)   --->   "%store_ln37 = store i32 %add_ln37_3, i32 %indx" [Image_Test.cpp:37]   --->   Operation 127 'store' 'store_ln37' <Predicate = true> <Delay = 0.83>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %tmp_last_V, void, void" [Image_Test.cpp:54]   --->   Operation 128 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%br_ln30 = br void %.split9.0" [Image_Test.cpp:30]   --->   Operation 129 'br' 'br_ln30' <Predicate = (!tmp_last_V)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 0.83>
ST_6 : Operation 130 [1/1] (0.83ns)   --->   "%store_ln60 = store i32 0, i32 %indx" [Image_Test.cpp:60]   --->   Operation 130 'store' 'store_ln60' <Predicate = true> <Delay = 0.83>
ST_6 : Operation 131 [1/1] (0.48ns)   --->   "%br_ln61 = br void" [Image_Test.cpp:61]   --->   Operation 131 'br' 'br_ln61' <Predicate = true> <Delay = 0.48>

State 7 <SV = 6> <Delay = 2.04>
ST_7 : Operation 132 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i13 0, void, i13 %add_ln61, void %.split7" [Image_Test.cpp:61]   --->   Operation 132 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 133 [1/1] (0.97ns)   --->   "%add_ln61 = add i13 %indvar_flatten, i13 1" [Image_Test.cpp:61]   --->   Operation 133 'add' 'add_ln61' <Predicate = true> <Delay = 0.97> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 134 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 134 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 135 [1/1] (0.86ns)   --->   "%icmp_ln61 = icmp_eq  i13 %indvar_flatten, i13 5000" [Image_Test.cpp:61]   --->   Operation 135 'icmp' 'icmp_ln61' <Predicate = true> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 136 [1/1] (0.00ns)   --->   "%br_ln61 = br i1 %icmp_ln61, void %.split7, void" [Image_Test.cpp:61]   --->   Operation 136 'br' 'br_ln61' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%indx_load_2 = load i32 %indx" [Image_Test.cpp:63]   --->   Operation 137 'load' 'indx_load_2' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln63 = zext i32 %indx_load_2" [Image_Test.cpp:63]   --->   Operation 138 'zext' 'zext_ln63' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%Image_addr_1 = getelementptr i32 %Image, i64 0, i64 %zext_ln63" [Image_Test.cpp:63]   --->   Operation 139 'getelementptr' 'Image_addr_1' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 140 [2/2] (1.35ns)   --->   "%R_1 = load i13 %Image_addr_1" [Image_Test.cpp:63]   --->   Operation 140 'load' 'R_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "%indx_load_3 = load i32 %indx" [Image_Test.cpp:64]   --->   Operation 141 'load' 'indx_load_3' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 142 [1/1] (1.20ns)   --->   "%indx_1 = add i32 %indx_load_3, i32 1" [Image_Test.cpp:64]   --->   Operation 142 'add' 'indx_1' <Predicate = (!icmp_ln61)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 143 [1/1] (0.83ns)   --->   "%store_ln64 = store i32 %indx_1, i32 %indx" [Image_Test.cpp:64]   --->   Operation 143 'store' 'store_ln64' <Predicate = (!icmp_ln61)> <Delay = 0.83>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "%indx_load_4 = load i32 %indx" [Image_Test.cpp:65]   --->   Operation 144 'load' 'indx_load_4' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i32 %indx_load_4" [Image_Test.cpp:65]   --->   Operation 145 'zext' 'zext_ln65' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 146 [1/1] (0.00ns)   --->   "%Image_addr_2 = getelementptr i32 %Image, i64 0, i64 %zext_ln65" [Image_Test.cpp:65]   --->   Operation 146 'getelementptr' 'Image_addr_2' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 147 [2/2] (1.35ns)   --->   "%G_1 = load i13 %Image_addr_2" [Image_Test.cpp:65]   --->   Operation 147 'load' 'G_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_7 : Operation 148 [1/1] (0.00ns)   --->   "%indx_load_5 = load i32 %indx" [Image_Test.cpp:66]   --->   Operation 148 'load' 'indx_load_5' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_7 : Operation 149 [1/1] (1.20ns)   --->   "%indx_2 = add i32 %indx_load_5, i32 1" [Image_Test.cpp:66]   --->   Operation 149 'add' 'indx_2' <Predicate = (!icmp_ln61)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 150 [1/1] (0.83ns)   --->   "%store_ln66 = store i32 %indx_2, i32 %indx" [Image_Test.cpp:66]   --->   Operation 150 'store' 'store_ln66' <Predicate = (!icmp_ln61)> <Delay = 0.83>

State 8 <SV = 7> <Delay = 2.04>
ST_8 : Operation 151 [1/2] (1.35ns)   --->   "%R_1 = load i13 %Image_addr_1" [Image_Test.cpp:63]   --->   Operation 151 'load' 'R_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_8 : Operation 152 [1/1] (0.48ns)   --->   "%store_ln63 = store i32 %R_1, i32 %R" [Image_Test.cpp:63]   --->   Operation 152 'store' 'store_ln63' <Predicate = (!icmp_ln61)> <Delay = 0.48>
ST_8 : Operation 153 [1/2] (1.35ns)   --->   "%G_1 = load i13 %Image_addr_2" [Image_Test.cpp:65]   --->   Operation 153 'load' 'G_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_8 : Operation 154 [1/1] (0.48ns)   --->   "%store_ln65 = store i32 %G_1, i32 %G" [Image_Test.cpp:65]   --->   Operation 154 'store' 'store_ln65' <Predicate = (!icmp_ln61)> <Delay = 0.48>
ST_8 : Operation 155 [1/1] (0.00ns)   --->   "%indx_load_6 = load i32 %indx" [Image_Test.cpp:67]   --->   Operation 155 'load' 'indx_load_6' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln67 = zext i32 %indx_load_6" [Image_Test.cpp:67]   --->   Operation 156 'zext' 'zext_ln67' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 157 [1/1] (0.00ns)   --->   "%Image_addr_3 = getelementptr i32 %Image, i64 0, i64 %zext_ln67" [Image_Test.cpp:67]   --->   Operation 157 'getelementptr' 'Image_addr_3' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 158 [2/2] (1.35ns)   --->   "%B_1 = load i13 %Image_addr_3" [Image_Test.cpp:67]   --->   Operation 158 'load' 'B_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_8 : Operation 159 [1/1] (0.00ns)   --->   "%indx_load_7 = load i32 %indx" [Image_Test.cpp:68]   --->   Operation 159 'load' 'indx_load_7' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_8 : Operation 160 [1/1] (1.20ns)   --->   "%indx_3 = add i32 %indx_load_7, i32 1" [Image_Test.cpp:68]   --->   Operation 160 'add' 'indx_3' <Predicate = (!icmp_ln61)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 161 [1/1] (0.83ns)   --->   "%store_ln68 = store i32 %indx_3, i32 %indx" [Image_Test.cpp:68]   --->   Operation 161 'store' 'store_ln68' <Predicate = (!icmp_ln61)> <Delay = 0.83>

State 9 <SV = 8> <Delay = 7.09>
ST_9 : Operation 162 [1/2] (1.35ns)   --->   "%B_1 = load i13 %Image_addr_3" [Image_Test.cpp:67]   --->   Operation 162 'load' 'B_1' <Predicate = (!icmp_ln61)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 5000> <RAM>
ST_9 : Operation 163 [1/1] (0.48ns)   --->   "%store_ln67 = store i32 %B_1, i32 %B" [Image_Test.cpp:67]   --->   Operation 163 'store' 'store_ln67' <Predicate = (!icmp_ln61)> <Delay = 0.48>
ST_9 : Operation 164 [1/1] (0.00ns)   --->   "%R_load = load i32 %R" [Image_Test.cpp:70]   --->   Operation 164 'load' 'R_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 165 [4/4] (7.09ns)   --->   "%conv = sitodp i32 %R_load" [Image_Test.cpp:70]   --->   Operation 165 'sitodp' 'conv' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_9 : Operation 166 [1/1] (0.00ns)   --->   "%G_load = load i32 %G" [Image_Test.cpp:70]   --->   Operation 166 'load' 'G_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_9 : Operation 167 [4/4] (7.09ns)   --->   "%conv1 = sitodp i32 %G_load" [Image_Test.cpp:70]   --->   Operation 167 'sitodp' 'conv1' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.09>
ST_10 : Operation 168 [3/4] (7.09ns)   --->   "%conv = sitodp i32 %R_load" [Image_Test.cpp:70]   --->   Operation 168 'sitodp' 'conv' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_10 : Operation 169 [3/4] (7.09ns)   --->   "%conv1 = sitodp i32 %G_load" [Image_Test.cpp:70]   --->   Operation 169 'sitodp' 'conv1' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%B_load = load i32 %B" [Image_Test.cpp:70]   --->   Operation 170 'load' 'B_load' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_10 : Operation 171 [4/4] (7.09ns)   --->   "%conv2 = sitodp i32 %B_load" [Image_Test.cpp:70]   --->   Operation 171 'sitodp' 'conv2' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.09>
ST_11 : Operation 172 [2/4] (7.09ns)   --->   "%conv = sitodp i32 %R_load" [Image_Test.cpp:70]   --->   Operation 172 'sitodp' 'conv' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_11 : Operation 173 [2/4] (7.09ns)   --->   "%conv1 = sitodp i32 %G_load" [Image_Test.cpp:70]   --->   Operation 173 'sitodp' 'conv1' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_11 : Operation 174 [3/4] (7.09ns)   --->   "%conv2 = sitodp i32 %B_load" [Image_Test.cpp:70]   --->   Operation 174 'sitodp' 'conv2' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.09>
ST_12 : Operation 175 [1/4] (7.09ns)   --->   "%conv = sitodp i32 %R_load" [Image_Test.cpp:70]   --->   Operation 175 'sitodp' 'conv' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_12 : Operation 176 [1/4] (7.09ns)   --->   "%conv1 = sitodp i32 %G_load" [Image_Test.cpp:70]   --->   Operation 176 'sitodp' 'conv1' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>
ST_12 : Operation 177 [2/4] (7.09ns)   --->   "%conv2 = sitodp i32 %B_load" [Image_Test.cpp:70]   --->   Operation 177 'sitodp' 'conv2' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.09>
ST_13 : Operation 178 [6/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 178 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 179 [6/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 179 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 180 [1/4] (7.09ns)   --->   "%conv2 = sitodp i32 %B_load" [Image_Test.cpp:70]   --->   Operation 180 'sitodp' 'conv2' <Predicate = (!icmp_ln61)> <Delay = 7.09> <CoreInst = "Int2Double">   --->   Core 66 'Int2Double' <Latency = 3> <II = 1> <Delay = 7.09> <FuncUnit> <Opcode : 'sitodp' 'uitodp'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.60>
ST_14 : Operation 181 [5/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 181 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 182 [5/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 182 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 183 [6/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 183 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.60>
ST_15 : Operation 184 [4/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 184 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 185 [4/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 185 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 186 [5/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 186 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 6.60>
ST_16 : Operation 187 [3/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 187 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 188 [3/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 188 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 189 [4/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 189 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.60>
ST_17 : Operation 190 [2/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 190 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 191 [2/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 191 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 192 [3/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 192 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 6.60>
ST_18 : Operation 193 [1/6] (6.60ns)   --->   "%mul = dmul i64 %conv, i64 0.299" [Image_Test.cpp:70]   --->   Operation 193 'dmul' 'mul' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 194 [1/6] (6.60ns)   --->   "%mul1 = dmul i64 %conv1, i64 0.587" [Image_Test.cpp:70]   --->   Operation 194 'dmul' 'mul1' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 195 [2/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 195 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 6.91>
ST_19 : Operation 196 [5/5] (6.91ns)   --->   "%add = dadd i64 %mul, i64 %mul1" [Image_Test.cpp:70]   --->   Operation 196 'dadd' 'add' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 197 [1/6] (6.60ns)   --->   "%mul2 = dmul i64 %conv2, i64 0.114" [Image_Test.cpp:70]   --->   Operation 197 'dmul' 'mul2' <Predicate = (!icmp_ln61)> <Delay = 6.60> <CoreInst = "DMul_maxdsp">   --->   Core 49 'DMul_maxdsp' <Latency = 5> <II = 1> <Delay = 6.60> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.91>
ST_20 : Operation 198 [4/5] (6.91ns)   --->   "%add = dadd i64 %mul, i64 %mul1" [Image_Test.cpp:70]   --->   Operation 198 'dadd' 'add' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 6.91>
ST_21 : Operation 199 [3/5] (6.91ns)   --->   "%add = dadd i64 %mul, i64 %mul1" [Image_Test.cpp:70]   --->   Operation 199 'dadd' 'add' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 6.91>
ST_22 : Operation 200 [2/5] (6.91ns)   --->   "%add = dadd i64 %mul, i64 %mul1" [Image_Test.cpp:70]   --->   Operation 200 'dadd' 'add' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.91>
ST_23 : Operation 201 [1/5] (6.91ns)   --->   "%add = dadd i64 %mul, i64 %mul1" [Image_Test.cpp:70]   --->   Operation 201 'dadd' 'add' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.91>
ST_24 : Operation 202 [5/5] (6.91ns)   --->   "%val = dadd i64 %add, i64 %mul2" [Image_Test.cpp:70]   --->   Operation 202 'dadd' 'val' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 6.91>
ST_25 : Operation 203 [4/5] (6.91ns)   --->   "%val = dadd i64 %add, i64 %mul2" [Image_Test.cpp:70]   --->   Operation 203 'dadd' 'val' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 6.91>
ST_26 : Operation 204 [3/5] (6.91ns)   --->   "%val = dadd i64 %add, i64 %mul2" [Image_Test.cpp:70]   --->   Operation 204 'dadd' 'val' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 6.91>
ST_27 : Operation 205 [2/5] (6.91ns)   --->   "%val = dadd i64 %add, i64 %mul2" [Image_Test.cpp:70]   --->   Operation 205 'dadd' 'val' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 6.91>
ST_28 : Operation 206 [1/5] (6.91ns)   --->   "%val = dadd i64 %add, i64 %mul2" [Image_Test.cpp:70]   --->   Operation 206 'dadd' 'val' <Predicate = (!icmp_ln61)> <Delay = 6.91> <CoreInst = "DAddSub_fulldsp">   --->   Core 37 'DAddSub_fulldsp' <Latency = 4> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 5.49>
ST_29 : Operation 207 [1/1] (0.00ns)   --->   "%reg = bitcast i64 %val"   --->   Operation 207 'bitcast' 'reg' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 208 [1/1] (0.00ns)   --->   "%trunc_ln306 = trunc i64 %reg"   --->   Operation 208 'trunc' 'trunc_ln306' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 209 [1/1] (0.00ns)   --->   "%exp = partselect i11 @_ssdm_op_PartSelect.i11.i64.i32.i32, i64 %reg, i32 52, i32 62"   --->   Operation 209 'partselect' 'exp' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 210 [1/1] (0.00ns)   --->   "%zext_ln311 = zext i11 %exp"   --->   Operation 210 'zext' 'zext_ln311' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%trunc_ln315 = trunc i64 %reg"   --->   Operation 211 'trunc' 'trunc_ln315' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 212 [1/1] (0.00ns)   --->   "%trunc_ln328 = trunc i64 %reg"   --->   Operation 212 'trunc' 'trunc_ln328' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%p_Result_1 = bitconcatenate i53 @_ssdm_op_BitConcatenate.i53.i1.i52, i1 1, i52 %trunc_ln315"   --->   Operation 213 'bitconcatenate' 'p_Result_1' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%zext_ln320 = zext i53 %p_Result_1"   --->   Operation 214 'zext' 'zext_ln320' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 215 [1/1] (1.46ns)   --->   "%icmp_ln323 = icmp_eq  i63 %trunc_ln306, i63 0"   --->   Operation 215 'icmp' 'icmp_ln323' <Predicate = (!icmp_ln61)> <Delay = 1.46> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 216 [1/1] (0.96ns)   --->   "%sh_amt = sub i12 1075, i12 %zext_ln311"   --->   Operation 216 'sub' 'sh_amt' <Predicate = (!icmp_ln61)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 217 [1/1] (0.85ns)   --->   "%icmp_ln327 = icmp_eq  i11 %exp, i11 1075"   --->   Operation 217 'icmp' 'icmp_ln327' <Predicate = (!icmp_ln61)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 218 [1/1] (0.86ns)   --->   "%icmp_ln329 = icmp_sgt  i12 %sh_amt, i12 0"   --->   Operation 218 'icmp' 'icmp_ln329' <Predicate = (!icmp_ln61)> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 219 [1/1] (0.86ns)   --->   "%icmp_ln330 = icmp_slt  i12 %sh_amt, i12 54"   --->   Operation 219 'icmp' 'icmp_ln330' <Predicate = (!icmp_ln61)> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 220 [1/1] (0.96ns)   --->   "%sh_amt_1 = sub i12 0, i12 %sh_amt"   --->   Operation 220 'sub' 'sh_amt_1' <Predicate = (!icmp_ln61)> <Delay = 0.96> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node select_ln329)   --->   "%sext_ln326 = sext i12 %sh_amt_1"   --->   Operation 221 'sext' 'sext_ln326' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 222 [1/1] (0.00ns)   --->   "%tmp = partselect i7 @_ssdm_op_PartSelect.i7.i12.i32.i32, i12 %sh_amt_1, i32 5, i32 11"   --->   Operation 222 'partselect' 'tmp' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 223 [1/1] (0.86ns)   --->   "%icmp_ln337 = icmp_slt  i7 %tmp, i7 1"   --->   Operation 223 'icmp' 'icmp_ln337' <Predicate = (!icmp_ln61)> <Delay = 0.86> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.86> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node select_ln329)   --->   "%shl_ln339 = shl i32 %trunc_ln328, i32 %sext_ln326"   --->   Operation 224 'shl' 'shl_ln339' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node select_ln329)   --->   "%select_ln337 = select i1 %icmp_ln337, i32 %shl_ln339, i32 0"   --->   Operation 225 'select' 'select_ln337' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%sext_ln331 = sext i12 %sh_amt"   --->   Operation 226 'sext' 'sext_ln331' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%zext_ln331 = zext i32 %sext_ln331"   --->   Operation 227 'zext' 'zext_ln331' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%lshr_ln331 = lshr i54 %zext_ln320, i54 %zext_ln331"   --->   Operation 228 'lshr' 'lshr_ln331' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%trunc_ln331 = trunc i54 %lshr_ln331"   --->   Operation 229 'trunc' 'trunc_ln331' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_29 : Operation 230 [1/1] (0.33ns)   --->   "%or_ln327 = or i1 %icmp_ln323, i1 %icmp_ln327"   --->   Operation 230 'or' 'or_ln327' <Predicate = (!icmp_ln61)> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%xor_ln327 = xor i1 %or_ln327, i1 1"   --->   Operation 231 'xor' 'xor_ln327' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%and_ln330 = and i1 %icmp_ln330, i1 %xor_ln327"   --->   Operation 232 'and' 'and_ln330' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%and_ln330_1 = and i1 %and_ln330, i1 %icmp_ln329"   --->   Operation 233 'and' 'and_ln330_1' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node select_ln323)   --->   "%select_ln330 = select i1 %and_ln330_1, i32 %trunc_ln331, i32 0"   --->   Operation 234 'select' 'select_ln330' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 235 [1/1] (1.69ns) (out node of the LUT)   --->   "%select_ln323 = select i1 %icmp_ln323, i32 0, i32 %select_ln330"   --->   Operation 235 'select' 'select_ln323' <Predicate = (!icmp_ln61)> <Delay = 1.69> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node select_ln327)   --->   "%xor_ln323 = xor i1 %icmp_ln323, i1 1"   --->   Operation 236 'xor' 'xor_ln323' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node select_ln327)   --->   "%and_ln327 = and i1 %icmp_ln327, i1 %xor_ln323"   --->   Operation 237 'and' 'and_ln327' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 238 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln327 = select i1 %and_ln327, i32 %trunc_ln328, i32 %select_ln323"   --->   Operation 238 'select' 'select_ln327' <Predicate = (!icmp_ln61)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node select_ln329)   --->   "%or_ln329 = or i1 %or_ln327, i1 %icmp_ln329"   --->   Operation 239 'or' 'or_ln329' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 240 [1/1] (1.45ns) (out node of the LUT)   --->   "%select_ln329 = select i1 %or_ln329, i32 %select_ln327, i32 %select_ln337"   --->   Operation 240 'select' 'select_ln329' <Predicate = (!icmp_ln61)> <Delay = 1.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 30 <SV = 29> <Delay = 2.40>
ST_30 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V_2)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %reg, i32 63"   --->   Operation 241 'bitselect' 'p_Result_s' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_30 : Operation 242 [1/1] (1.20ns)   --->   "%sub_ln455 = sub i32 0, i32 %select_ln329"   --->   Operation 242 'sub' 'sub_ln455' <Predicate = (!icmp_ln61)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node tmp_data_V_2)   --->   "%tmp_data_V_1 = select i1 %p_Result_s, i32 %sub_ln455, i32 %select_ln329"   --->   Operation 243 'select' 'tmp_data_V_1' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 244 [1/1] (1.20ns) (out node of the LUT)   --->   "%tmp_data_V_2 = sub i32 255, i32 %tmp_data_V_1"   --->   Operation 244 'sub' 'tmp_data_V_2' <Predicate = (!icmp_ln61)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 245 [2/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %Data_Out_V_data_V, i4 %Data_Out_V_keep_V, i4 %Data_Out_V_strb_V, i2 %Data_Out_V_user_V, i1 %Data_Out_V_last_V, i5 %Data_Out_V_id_V, i6 %Data_Out_V_dest_V, i32 %tmp_data_V_2, i4 %ref_tmp_keep, i4 %ref_tmp_strb, i2 %ref_tmp_user, i1 1, i5 %ref_tmp_id, i6 %ref_tmp_dest"   --->   Operation 245 'write' 'write_ln304' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 31 <SV = 30> <Delay = 0.00>
ST_31 : Operation 246 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_61_3_VITIS_LOOP_62_4_str"   --->   Operation 246 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_31 : Operation 247 [1/1] (0.00ns)   --->   "%empty_33 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 5000, i64 5000, i64 5000"   --->   Operation 247 'speclooptripcount' 'empty_33' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_31 : Operation 248 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 248 'specpipeline' 'specpipeline_ln0' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_31 : Operation 249 [1/1] (0.00ns)   --->   "%specloopname_ln62 = specloopname void @_ssdm_op_SpecLoopName, void @empty_5" [Image_Test.cpp:62]   --->   Operation 249 'specloopname' 'specloopname_ln62' <Predicate = (!icmp_ln61)> <Delay = 0.00>
ST_31 : Operation 250 [1/2] (0.00ns)   --->   "%write_ln304 = write void @_ssdm_op_Write.axis.volatile.i32P0A.i4P0A.i4P0A.i2P0A.i1P0A.i5P0A.i6P0A, i32 %Data_Out_V_data_V, i4 %Data_Out_V_keep_V, i4 %Data_Out_V_strb_V, i2 %Data_Out_V_user_V, i1 %Data_Out_V_last_V, i5 %Data_Out_V_id_V, i6 %Data_Out_V_dest_V, i32 %tmp_data_V_2, i4 %ref_tmp_keep, i4 %ref_tmp_strb, i2 %ref_tmp_user, i1 1, i5 %ref_tmp_id, i6 %ref_tmp_dest"   --->   Operation 250 'write' 'write_ln304' <Predicate = (!icmp_ln61)> <Delay = 0.00> <CoreInst = "axis">   --->   Core 123 'axis' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_31 : Operation 251 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 251 'br' 'br_ln0' <Predicate = (!icmp_ln61)> <Delay = 0.00>

State 32 <SV = 7> <Delay = 0.00>
ST_32 : Operation 252 [1/1] (0.00ns)   --->   "%ret_ln78 = ret" [Image_Test.cpp:78]   --->   Operation 252 'ret' 'ret_ln78' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.837ns
The critical path consists of the following:
	'alloca' operation ('indx') [37]  (0 ns)
	'store' operation ('store_ln26', Image_Test.cpp:26) of constant 0 on local variable 'indx' [43]  (0.837 ns)

 <State 2>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_1', Image_Test.cpp:37) on local variable 'indx' [66]  (0 ns)
	'add' operation ('add_ln37', Image_Test.cpp:37) [67]  (1.2 ns)
	'store' operation ('store_ln37', Image_Test.cpp:37) of variable 'add_ln37', Image_Test.cpp:37 on local variable 'indx' [68]  (0.837 ns)

 <State 3>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_9', Image_Test.cpp:37) on local variable 'indx' [80]  (0 ns)
	'add' operation ('add_ln37_1', Image_Test.cpp:37) [81]  (1.2 ns)
	'store' operation ('store_ln37', Image_Test.cpp:37) of variable 'add_ln37_1', Image_Test.cpp:37 on local variable 'indx' [82]  (0.837 ns)

 <State 4>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_11', Image_Test.cpp:37) on local variable 'indx' [94]  (0 ns)
	'add' operation ('add_ln37_2', Image_Test.cpp:37) [95]  (1.2 ns)
	'store' operation ('store_ln37', Image_Test.cpp:37) of variable 'add_ln37_2', Image_Test.cpp:37 on local variable 'indx' [96]  (0.837 ns)

 <State 5>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_13', Image_Test.cpp:37) on local variable 'indx' [108]  (0 ns)
	'add' operation ('add_ln37_3', Image_Test.cpp:37) [109]  (1.2 ns)
	'store' operation ('store_ln37', Image_Test.cpp:37) of variable 'add_ln37_3', Image_Test.cpp:37 on local variable 'indx' [110]  (0.837 ns)

 <State 6>: 0.837ns
The critical path consists of the following:
	'store' operation ('store_ln60', Image_Test.cpp:60) of constant 0 on local variable 'indx' [115]  (0.837 ns)

 <State 7>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_3', Image_Test.cpp:64) on local variable 'indx' [133]  (0 ns)
	'add' operation ('indx', Image_Test.cpp:64) [134]  (1.2 ns)
	'store' operation ('store_ln64', Image_Test.cpp:64) of variable 'indx', Image_Test.cpp:64 on local variable 'indx' [135]  (0.837 ns)

 <State 8>: 2.04ns
The critical path consists of the following:
	'load' operation ('indx_load_7', Image_Test.cpp:68) on local variable 'indx' [149]  (0 ns)
	'add' operation ('indx', Image_Test.cpp:68) [150]  (1.2 ns)
	'store' operation ('store_ln68', Image_Test.cpp:68) of variable 'indx', Image_Test.cpp:68 on local variable 'indx' [151]  (0.837 ns)

 <State 9>: 7.1ns
The critical path consists of the following:
	'load' operation ('R_load', Image_Test.cpp:70) on local variable 'R' [152]  (0 ns)
	'sitodp' operation ('conv', Image_Test.cpp:70) [153]  (7.1 ns)

 <State 10>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('conv', Image_Test.cpp:70) [153]  (7.1 ns)

 <State 11>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('conv', Image_Test.cpp:70) [153]  (7.1 ns)

 <State 12>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('conv', Image_Test.cpp:70) [153]  (7.1 ns)

 <State 13>: 7.1ns
The critical path consists of the following:
	'sitodp' operation ('conv2', Image_Test.cpp:70) [160]  (7.1 ns)

 <State 14>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('mul', Image_Test.cpp:70) [154]  (6.6 ns)

 <State 15>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('mul', Image_Test.cpp:70) [154]  (6.6 ns)

 <State 16>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('mul', Image_Test.cpp:70) [154]  (6.6 ns)

 <State 17>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('mul', Image_Test.cpp:70) [154]  (6.6 ns)

 <State 18>: 6.6ns
The critical path consists of the following:
	'dmul' operation ('mul', Image_Test.cpp:70) [154]  (6.6 ns)

 <State 19>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('add', Image_Test.cpp:70) [158]  (6.92 ns)

 <State 20>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('add', Image_Test.cpp:70) [158]  (6.92 ns)

 <State 21>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('add', Image_Test.cpp:70) [158]  (6.92 ns)

 <State 22>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('add', Image_Test.cpp:70) [158]  (6.92 ns)

 <State 23>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('add', Image_Test.cpp:70) [158]  (6.92 ns)

 <State 24>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('val', Image_Test.cpp:70) [162]  (6.92 ns)

 <State 25>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('val', Image_Test.cpp:70) [162]  (6.92 ns)

 <State 26>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('val', Image_Test.cpp:70) [162]  (6.92 ns)

 <State 27>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('val', Image_Test.cpp:70) [162]  (6.92 ns)

 <State 28>: 6.92ns
The critical path consists of the following:
	'dadd' operation ('val', Image_Test.cpp:70) [162]  (6.92 ns)

 <State 29>: 5.5ns
The critical path consists of the following:
	'sub' operation ('sh_amt') [173]  (0.962 ns)
	'icmp' operation ('icmp_ln329') [175]  (0.861 ns)
	'and' operation ('and_ln330_1') [190]  (0 ns)
	'select' operation ('select_ln330') [191]  (0 ns)
	'select' operation ('select_ln323') [192]  (1.7 ns)
	'select' operation ('select_ln327') [195]  (0.525 ns)
	'select' operation ('select_ln329') [197]  (1.45 ns)

 <State 30>: 2.41ns
The critical path consists of the following:
	'sub' operation ('sub_ln455') [198]  (1.2 ns)
	'select' operation ('tmp.data.V') [199]  (0 ns)
	'sub' operation ('tmp.data.V') [200]  (1.2 ns)

 <State 31>: 0ns
The critical path consists of the following:

 <State 32>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
